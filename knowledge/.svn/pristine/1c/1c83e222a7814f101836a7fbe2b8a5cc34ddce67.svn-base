<!doctype html>
<html>
<head>
	<!--script type="text/javascript" src="https://getfirebug.com/firebug-lite.js#startOpened=true"></script-->
</head>
	<body>
		<a href="../index.html"> <- back to index</a>
		<h2>jQuery Version (no plugin, 1.7+)</h2>
		<p>
		TouchAdapter provides a means of capturing touch events and presenting them as mouse events, allowing you to perform common tasks without having to register two different types of events.  The script can operate directly on the DOM, or you can use one of the (yet to be created) library versions of it; these versions will work entirely in the event context of the library in question.
		</p>
		<p>
			The blue div below is configured to use TouchAdapter to register a listener for all mouse events, including click, double click and context menu.
		</p>
		<p> This page shows the jQuery version, without the plugin, using the jQuery functions "bind" and "unbind", which have been in jQuery since dinosaurs ruled the earth, and which were superseded in jQuery 1.7. But if you need to use this with jQuery &lt; 1.7, you can.</p>

		<div id="debug" style="width:400px;height:40px;border:1px solid red;"></div>
		<button id="btnUnbind">Unbind</button>
		<div id="workspace" style="width:400px;height:400px;border:1px solid blue;"></div>
		
		<script src='http://ajax.googleapis.com/ajax/libs/jquery/1.6.1/jquery.min.js'></script>		
		<script src="../js/touch-adapter-0.1.js"></script>

		<script type="text/javascript">
			$(function() {

				var d = function(msg, consume) {
						return function(e) {
							if (consume) {
								e.stopPropagation();
								e.preventDefault();
							}				
							document.getElementById("debug").innerHTML = msg;
							if (typeof console != "undefined") console.log(e);
						};
					},
					ta,
					w = $("#workspace"),
					move = d("mousemove"),
					down = d("mousedown"),
					up = d("mouseup"),
					click = d("click"),
					contextmenu = d("contextmenu", true),
					dblclick = d("dblclick");
										
// jquery on/off version

				// create a TouchAdapter and supply functions for bind and unbind, as well as a function to
				// unwrap the original browser event from the supporting library's event object.
				// this example uses 'bind' and 'unbind', meaning it works with jquery < 1.7.
				ta = new TouchAdapter({
					bind:function(obj, evt, fn) { $(obj).bind(evt, fn); },
					unbind:function(obj, evt, fn) { $(obj).unbind(evt, fn); },
					unwrap:function(e) { return e.originalEvent; }
				});
				ta.bind(w, "mousemove", move)
				  .bind(w, "mouseup", up)
				  .bind(w, "mousedown", down)
				  .bind(w, "click", click)
				  .bind(w, "dblclick", dblclick)
				  .bind(w, "contextmenu", contextmenu);

				$("#btnUnbind").bind("click", function() {
					ta.unbind(w, "mousemove")
					 .unbind(w, "mouseup")
					 .unbind(w, "mousedown")
					 .unbind(w, "click")
					 .unbind(w, "dblclick")
					 .unbind(w, "contextmenu");
				});							
			});
		</script>

	</body>
</html>