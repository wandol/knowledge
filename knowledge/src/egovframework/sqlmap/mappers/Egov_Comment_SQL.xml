<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- <!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd"> -->
 
<mapper namespace="CommentMapper">

	<!-- ProblemFocus 지식 코멘트 등록 -->
	<insert id="insertCommentHistory" parameterType="CommentVO">
		INSERT
		  INTO tb_comment_history (
		  	REPO_KEY,
		  	REPO_FILE_NM,
			GUBUN_NO,
		  	CATEGORY,
		  	COMMENT,
		  	RATING,
		  	USER_ID,
		  	REG_DT,
		  	UDT_DT
		  )	
		 VALUES (
		 	#{repo_key},
		 	#{repo_file_nm},
			#{gubun_no},
		 	#{category},
		 	#{comment},
		 	#{rating},
		 	#{user_id},
		 	now(),
		 	now()
		 )
	</insert>
	
	<!-- ProblemFocus 지식 코멘트 count 조회 -->
	<select id="selectCommentCount" parameterType="map" resultType="Integer">
		SELECT COUNT(*) AS COUNT
		  FROM tb_comment_history
		 WHERE REPO_KEY = #{repo_key}
		   AND REPO_FILE_NM = #{repo_file_nm}
		   AND GUBUN_NO = #{gubun_no}
		   AND CATEGORY = #{category} 
	</select>
	
	<!-- ProblemFocus 지식 코멘트 리스트 조회 -->
	<select id="selectCommentList" parameterType="CommentVO" resultType="CommentVO">
		SELECT A.COMMENT,
<!-- 	           A.REPO_FILE_NM, -->
			   A.RATING,
			   A.USER_ID,
			   A.REG_DT,
			   A.UDT_DT,
			   A.CATEGORY
		  FROM tb_comment_history A
		 WHERE A.REPO_KEY = #{repo_key}
<!-- 		   AND A.REPO_FILE_NM = #{repo_file_nm} -->
		   AND A.GUBUN_NO = #{gubun_no}
		   AND A.CATEGORY = #{category}
		   <if test='user_id != null and user_id != ""'>
		   AND A.USER_ID = #{user_id} 
		   </if>
	</select>
	
	<!-- ProblemFocus 지식 코멘트 리스트 조회 -->
	<select id="selectCommentListTop10" resultType="CommentVO">
		SELECT A.REPO_KEY,
			   A.COMMENT,
			   A.REPO_FILE_NM,
			   A.GUBUN_NO,
			   A.CATEGORY,
			   A.RATING,
			   B.USER_NM,
			   A.REG_DT,
			   A.UDT_DT
		  FROM tb_comment_history A, tb_user_info B
		 WHERE A.USER_ID = B.USER_ID 
		 ORDER BY A.UDT_DT DESC
		 LIMIT 10
	</select>
	
	<select id="selectCommentListBoard" parameterType="CommentVO" resultType="CommentVO">
		SELECT A.REPO_KEY,
			   A.IDX,
			   A.COMMENT,
			   A.REPO_FILE_NM,
			   A.GUBUN_NO,
			   A.CATEGORY,
			   A.RATING,
			   B.USER_NM,
			   A.REG_DT,
			   A.UDT_DT
		  FROM tb_comment_history A, tb_user_info B
		 <where>		 	
		 	AND A.USER_ID = B.USER_ID 
		 	<if test='sSearch != null and sSearch != ""'>
         	OR
         	(
         		A.REPO_FILE_NM = #{sSearch}
         		OR 
         		A.COMMENT = #{sSearch}
         		OR 
         		B.USER_NM = #{sSearch}
         	)
         	</if>
		 </where>
		 ORDER BY A.IDX DESC
		 <if test="iDisplayStart != null and iDisplayLength != null">
         	LIMIT ${iDisplayStart} , ${iDisplayLength}
         </if>
	</select>
	
	<select id="selectCommentListBoardTotal" parameterType="CommentVO"  resultType="Integer">
		SELECT COUNT(*) AS COUNT
		  FROM tb_comment_history A, tb_user_info B
		  <where>		 	
		 	AND A.USER_ID = B.USER_ID 
		 	<if test='sSearch != null and sSearch != ""'>
		 	OR
         	(
         		A.REPO_FILE_NM = #{sSearch}
         		OR 
         		A.COMMENT = #{sSearch}
         		OR 
         		B.USER_NM = #{sSearch}
         	)
         	</if>
		 </where>
	</select>
	
	<select id="selectCommentOne" parameterType="CommentVO" resultType="CommentVO">
		SELECT A.REPO_KEY,
			   A.IDX,
			   A.COMMENT,
			   A.REPO_FILE_NM,
               A.GUBUN_NO,
			   A.CATEGORY,
			   A.RATING,
			   B.USER_NM,
			   A.REG_DT,
			   A.UDT_DT
		  FROM tb_comment_history A, tb_user_info B
		 <where>		 	
		 	AND A.USER_ID = B.USER_ID
		 	<if test="idx != null">
		 		AND A.IDX = #{idx}
		 	</if> 
		 </where>
	</select>
</mapper>
